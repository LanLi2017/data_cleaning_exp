To answer the question, we can first use f_add_column() to add more columns by applying transformations, similar to f_trans_column() to the table.

The required arguments for f_add_column() include: baseColumnName, expression, newColumnName. With expression defined, the new column could be based on copying pasting the original value from the base column, or using transformation to process and 
append values to new column.

/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27–21 | 1–0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37–3 | 2–0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33–29 | 3–0 | estadi olímpic de montjuïc | 17,503
*/
Purpose: Return top 5 competitions that have the most attendance.
The existing columns are: "week", "when", "kickoff", "opponent", "results; final score", "results; team record", "game site", "attendance".
Explanation: We copy the value from column "attendance" and create a new column "attendance number" for each row.
Therefore, the answer is: f_add_column({"baseColumnName": "attendance", expression:"value", "newColumnName":"attendance number"}). The value: 32,092 | 34,186 | 17,503


/*
col : week | when | kickoff | opponent | results; final score | results; team record | game site | attendance
row 1 : 1 | saturday, april 13 | 7:00 p.m. | at rhein fire | w 27–21 | 1–0 | rheinstadion | 32,092
row 2 : 2 | saturday, april 20 | 7:00 p.m. | london monarchs | w 37–3 | 2–0 | waldstadion | 34,186
row 3 : 3 | sunday, april 28 | 6:00 p.m. | at barcelona dragons | w 33–29 | 3–0 | estadi olímpic de montjuïc | 17,503
*/
Purpose: Figure out the date of the competition with highest attendance.
The existing columns are: "week", "when", "kickoff", "opponent", "results; final score", "results; team record", "game site", "attendance".
Explanation: We extract the value from column "when" and create a different column "date of competition" for each row.
Therefore, the answer is: f_add_column({"baseColumnName": "when", expression:"value.split(",")[-1]", "newColumnName":"date of competition"}). The value: april 13 | april 20 | april 28


/*
col : rank | lane | player name| country | time
row 1 :  | 5 | olga tereshkova |  kaz    | 51.86
row 2 :  | 6 | manjeet kaur    |  ind    | 52.17
row 3 :  | 3 | asami tanno     |  jpn    | 53.04
*/
Purpose: return the player information, including both name and country 
The existing columns are: rank, lane, player, time.
Explanation: We add a new column based on concatenating the value from column "player name" and "country" for each row.
Therefore, the answer is: f_add_column({"baseColumnName": "player name", expression:"cells['player name'].value+ "-"+ cells['country'].value", "newColumnName":"player"}). The value: olga tereshkova-kaz | manjeet kaur-ind | asami tanno-jpn